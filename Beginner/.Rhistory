store.num <- factor (c (3, 14, 21, 32, 54))
store.rev <- c (543, 654, 345, 678, 234)
store.visits <- c (45, 78, 32, 56, 34)
store.manager <- c("Annie", "Bert", "Carla", "Dave", "Ella")
store.df <- data.frame(store.num, store.rev, store.visits, store.manager, stringAsFactors=F)
store.df
store.df <- data.frame(store.num, store.rev, store.visits, store.manager, stringsAsFactors=F)
store.df
store.df[,4]
store.df[1,2]
sumary(store.df)
summary(store.df)
summary(store.df[,2]
)
store.df$store.manager
cor(store.df$ store.rev , store.df$ store.visits)
dir
save(store.df, file="store-df-saved.RData")
local({fn<-choose.files(filters=Filters[c('R','txt','All'),],index=4)
file.show(fn,header=fn,title='')})
getwd()
setwd("G:/Code/R/Beginner")
save(store.df, file="store-df-saved.RData")
ls()
rm(list=ls())
ls()
load("store-df-saved.RData")
store.df
store.num
getwd()
q()
Months
Months <- c("january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december")
Months
#create a summer vector with numeric index of summer months
summer <- 6:9
summer
#use summer vector to index summer months in Months
Months[summer]
#multiply summer by 3
tmp.summer <- summer*3
Months[tmp.summer]
#take mean of summer
(mean.summer <- mean(summer))
Months[mean.summer]
#use floor() and ceiling() to get limits of Months for average summer month
Months[floor(mean.summer)]
Months[ceiling(mean.summer)]
ls()
#using store.df to find out how many visits did Bert's store have
store.df$store.visits[store.df$store.manager == "Bert"]
# How can you confirm that the previous answer is actually from Bert's store? Show this with a command that produces no more than 1 row of console output.
store.df[2, ]      # better answers in later chapters
# Using the store.df data from Section 2.5, how many visits did Bert's store have?
store.df[2 , 3]    # better answers in later chapters
#how can you confirm previous answer is actually from Bert's store
store.df[2,]
#create a function to return area of a pie
PieArea <- function(x) {
return(pi*x^2)
}
View(PieArea)
#what are area of pies with length 4.0, 4.5, 5.0, 6.0
pie.radius = c(4,4.5,5,6)
PieArea(pie.radius)
#rewrite the previous function with lambda function
apply(pie.radius, 1, function(x) {return(pi*x*x)})
#rewrite the previous function with lambda function
apply(pie.radius, function(x) {return(pi*x*x)})
#rewrite the previous function with lambda function
apply(pie.radius, 2,function(x){return(pi*x*x)})
#rewrite the previous function with lambda function
pie.radius.list <- list(pie.radius)
pie.radius.list
lapply(pie.radius.list,function(x){x*pi*x})
rm(list=ls())
rm(store.df)
