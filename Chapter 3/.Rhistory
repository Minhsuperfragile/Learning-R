install.packages("rwolrd")
install.packages("rworldmap")
setwd("G:/Code/R/Chapter 3")
load("store-df-saved.RData")
#by() divide data into subgroup
by(store.df$p1sales, list(store.df$storeNum,store.df$Year), FUN=mean)
#use aggregate() to return a formatted result
p1sale.sumByCountry = aggregate(store.df$p1sales, list(country=store.df$country), sum)
#create map
p1sales.map = joinCountryData2Map(p1sale.sumByCountry, joinCode="ISO2",
nameJoinColumn = "region")
install.packages("RColorBrewer")
library(rworldmap)
library(RColorBrewer)
mapCountryData(mapToPlot = p1sales.map,
nameColumnToPlot = "x",
mapTitle="Total P1 sales by country",
colourPalette = brewer.pal(7,"Green"),
catMethod = "fixedWidth", addLegend = F
)
#create map
p1sales.map = joinCountryData2Map(p1sale.sumByCountry, joinCode="ISO2",
nameJoinColumn = "region")
#use aggregate() to return a formatted result
p1sale.sumByCountry = aggregate(store.df$p1sales, list(country=store.df$country), sum)
#create map
p1sales.map = joinCountryData2Map(p1sale.sumByCountry, joinCode="ISO2",
nameJoinColumn = "region")
mapCountryData(mapToPlot = p1sales.map,
nameColumnToPlot = "x",
mapTitle="Total P1 sales by country",
colourPalette = brewer.pal(7,"Green"),
catMethod = "fixedWidth", addLegend = F
)
#create map
p1sales.map = joinCountryData2Map(p1sale.sumByCountry, joinCode="ISO2",
nameJoinColumn = "country")
mapCountryData(mapToPlot = p1sales.map,
nameColumnToPlot = "x",
mapTitle="Total P1 sales by country",
colourPalette = brewer.pal(7,"Green"),
catMethod = "fixedWidth", addLegend = F
)
mapCountryData(mapToPlot = p1sales.map,
nameColumnToPlot = "x",
mapTitle="Total P1 sales by country",
colourPalette = brewer.pal(7,"Greens"),
catMethod = "fixedWidth", addLegend = F
)
rm(list=ls())
ecom.df = read.csv("ecommerce-data.csv")
#draw a horizontal box plot
boxplot(ecom.df$behavNumVisits, horizontal = TRUE)
# the histogram plot is easier to see the smaller part but box plot is better to see out-liner
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE)
unique(ecom.df$profile)
# the histogram plot is easier to see the smaller part but box plot is better to see out-liner
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE, yaxt="n")
# the histogram plot is easier to see the smaller part but box plot is better to see out-liner
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE, yaxt=c("P","PwA", "T","HP","O","R","F","0"))
# the histogram plot is easier to see the smaller part but box plot is better to see out-liner
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE, ylab=c("P","PwA", "T","HP","O","R","F","0"))
# the histogram plot is easier to see the smaller part but box plot is better to see out-liner
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE, ylab="n")
# the histogram plot is easier to see the smaller part but box plot is better to see out-liner
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE, yaxt="n")
axis(side=2,labels = c("P","PwA", "T","HP","O","R","F","0"))
axis(side=2,at = c("P","PwA", "T","HP","O","R","F","0"))
axis(side=2,at = 1:8, labels = c("P","PwA", "T","HP","O","R","F","0"))
axis(side=2,at = c(8:1), labels = c("P","PwA", "T","HP","O","R","F","0"))
#draw a horizontal box plot
boxplot(ecom.df$behavNumVisits, horizontal = TRUE)
# the histogram plot is easier to see the smaller part but box plot is better to see out-liner
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE, yaxt="n")
axis(side=2,at = c(8:1), labels = c("P","PwA", "T","HP","O","R","F","0"))
par(mar=c(3, 12, 2, 2))
boxplot(ecom.df$behavNumVisits ~ ecom.df$profile, horizontal = TRUE, yaxt="n")
axis(side=2,at = c(8:1), labels = c("P","PwA", "T","HP","O","R","F","0"))
unique(ecom.df$profile)
par(mar=c(5, 4, 4, 2) + 0.1)
?absolute
?abs
return(abs(tmp.med-tmp.mean))}
MeanMedDiff = function(x) {
tmp.mean = mean(x)
tmp.med = median(x)
return(abs(tmp.med-tmp.mean))
}
MeanMedDiff(ecom.df$behavNumVisits)
max(ecom.df$behavNumVisits)
#exclude the person with the most visits
MeanMedDiff(ecom.df$behavNumVisits[-which.max(ecom.df$behavNumVisits)])
?apply
#use apply() to Mean Med Diff
apply(ecom.df, MARGIN = c(37:45), FUN=MeanMedDiff)
#use apply() to Mean Med Diff
apply(ecom.df[37:45], MARGIN = 2, FUN=MeanMedDiff)
(tmp.med = median(x))
MeanMedDiff = function(x) {
(tmp.mean = mean(x))
(tmp.med = median(x))
return(abs(tmp.med-tmp.mean))
}
#use apply() to Mean Med Diff
apply(ecom.df[37:45], MARGIN = 2, FUN=MeanMedDiff)
mean(ecom.df$behavDetailProdA)
median(ecom.df$behavDetailProdA)
#use apply() to Mean Med Diff
apply(ecom.df[37:45], MARGIN = 2, FUN=MeanMedDiff)
#use apply() to Mean Med Diff
apply(ecom.df[38:45], MARGIN = 2, FUN=MeanMedDiff)
#use with anonymous function
apply(ecom.df[38:45], MARGIN=2, FUN= function(x){return(abs(mean(x)-median(x)))})
rm(list=ls())
